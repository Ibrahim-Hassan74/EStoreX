[
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/Account/confirm-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Token",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "RedirectTo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Account/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EStoreX.Core.DTO.ForgotPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "RefreshToken",
    "RelativePath": "api/Account/generate-new-jwt-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "EStoreX.Core.DTO.TokenModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "PostLogin",
    "RelativePath": "api/Account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDTO",
        "Type": "EStoreX.Core.DTO.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "PostRegister",
    "RelativePath": "api/Account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDTO",
        "Type": "EStoreX.Core.DTO.RegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "ResetPassword",
    "RelativePath": "api/Account/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EStoreX.Core.DTO.ResetPasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.AccountController",
    "Method": "VerifyResetPassword",
    "RelativePath": "api/Account/reset-password/verify",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Token",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BasketsController",
    "Method": "AddOrUpdateBasket",
    "RelativePath": "api/Baskets",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "basket",
        "Type": "EStoreX.Core.Domain.Entities.CustomerBasket",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BasketsController",
    "Method": "GetBasket",
    "RelativePath": "api/Baskets/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BasketsController",
    "Method": "DeleteBasket",
    "RelativePath": "api/Baskets/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BugController",
    "Method": "GetBadRequest",
    "RelativePath": "api/Bug/bad-request",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BugController",
    "Method": "GetBadRequest",
    "RelativePath": "api/Bug/bad-request/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BugController",
    "Method": "GetError",
    "RelativePath": "api/Bug/error",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.BugController",
    "Method": "GetNotFound",
    "RelativePath": "api/Bug/not-found",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.CategoriesController",
    "Method": "GetCategories",
    "RelativePath": "api/Categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.CategoriesController",
    "Method": "CreateCategory",
    "RelativePath": "api/Categories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDTO",
        "Type": "EStoreX.Core.DTO.CategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.CategoriesController",
    "Method": "GetCategoryById",
    "RelativePath": "api/Categories/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.CategoriesController",
    "Method": "UpdateCategory",
    "RelativePath": "api/Categories/{Id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "categoryDTO",
        "Type": "EStoreX.Core.DTO.UpdateCategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.CategoriesController",
    "Method": "DeleteCategory",
    "RelativePath": "api/Categories/{Id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ProductsController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SearchString",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "MinPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "MaxPrice",
        "Type": "System.Nullable\u00601[[System.Decimal, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "SortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SortOrder",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EStoreX.Core.DTO.ProductResponse, E-StoreX.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ProductsController",
    "Method": "CreateProduct",
    "RelativePath": "api/Products",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "OldPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Photos",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EStoreX.Core.DTO.ProductResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ProductsController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "OldPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Photos",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EStoreX.Core.DTO.ProductResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ProductsController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Products/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ProductsController",
    "Method": "GetProductById",
    "RelativePath": "api/Products/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EStoreX.Core.DTO.ProductResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "E_StoreX.API.Controllers.ErrorController",
    "Method": "Error",
    "RelativePath": "errors/{statusCode}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "statusCode",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]